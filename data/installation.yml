# Ember CLI
-
  title: Ember CLI
  docs: |
    [ember-cli-emblem](https://github.com/Vestorly/ember-cli-emblem) will automatically parse any of your Emblem templates with either the `.emblem` or `.embl` extensions into raw handlebars.

    For a new Ember CLI application, you will only need to add the `ember-cli-emblem` addon.  However, if your project includes `broccoli-emblem-compiler`, it should first be removed: `npm uninstall --save-dev broccoli-emblem-compiler`.

  shell: |
    ember install ember-cli-emblem

# Rails
-
  title: Ruby on Rails
  docs: |

    To install Emblem on a Rails 3 project, just use add the following lines to your `Gemfile` and run `bundle`.

    Define your templates in `app/assets/javascripts/templates` with the file extension `.emblem`. These will be automatically compiled and made available as Ember templates. Templates with the `.raw.emblem` extension will be compiled as vanilla Handlebars templates.

    For a working sample project, check out:<br>[github.com/machty/emblem-rails-demo](https://github.com/machty/emblem-rails-demo)

  shell: |
    # Step 1: edit your application's Gemfile
    gem 'ember-rails'
    gem 'emblem-rails'

    # Optional, use the older pre4 version of ember (the default is rc1)
    #gem 'ember-source', '1.0.0.pre4.2'

    # Step 2: rebundle and restart your dev server
    bundle

    # Step 3: create your .emblem templates in app/assets/javascripts/templates/


# HTML / Javascript
-
  title: Inline HTML / Javascript
  docs: |
    You can easily test Emblem in the browser (works great for sites like jsbin.com) by just including the Emblem compiler script and wrapping your Emblem templates with `<script type="text/x-emblem">`.

    Your emblem script tags can also include `data-template-name` similar to inline Handlebars templates.

    See a working JSBin [demo here](http://jsbin.com/ulegec/17/edit).

  html: |
    <!-- Step 1: Add Emblem.js -->
    <script src="https://github.com/machty/emblem.js/raw/master/dist/emblem.js"></script>

    <!-- Step 2: define templates -->
    <script type="text/x-emblem" data-template-name="application">
      h1 Welcome to my App
      = outlet
    </script>


# Brunch
-
  title: Brunch.io
  docs: |
    Emblem is supported in [Brunch.io](http://brunch.io) via the [emblem-brunch](https://github.com/machty/emblem-brunch) plugin.

  instructions: |
    Follow [these instructions](https://github.com/machty/emblem-brunch) to get started with Brunch.

# Grunt
-
  title: Grunt (and Yeoman)
  docs: |
    Emblem is supported in [Grunt](http://gruntjs.com) via the [grunt-emblem](https://github.com/wordofchristian/grunt-emblem) plugin.

  instructions: |
    Follow [these instructions](https://github.com/wordofchristian/grunt-emblem) to get started with Grunt.

# Mimosa
-
  title: Mimosa
  docs: |
    Emblem is supported in [Mimosa](http://mimosajs.com/) since version 0.10.1.

  instructions: |
    Follow [these instructions](http://mimosajs.com/started.html) to get started with Mimosa.

    Once you're setup, files ending in .emblem or .embl will be compiled as Emblem templates. If you've enabled Ember in your project, they'll be compiled as Ember-ized templates.

# Ember Tools
-
  title: Ember Tools
  docs: |

  instructions: |
    [Ember Tools](https://github.com/rpflorence/ember-tools) support coming soon!

# MeteorJS
-
  title: MeteorJS
  docs: |

  instructions: |
    [MeteorJS](https://meteor.com) support coming soon!
